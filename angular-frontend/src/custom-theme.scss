@use 'sass:map';
@use "tailwind";
@use '@angular/material' as mat;
@use './_theme-colors' as my-theme;
@use '@angular/material/core/theming/theming';
@use '@angular/material/core/tokens/m3-utils';
@use './app/components/pill/pill-theme' as pill;
@use './app/components/sidebar/sidebar-theme' as sidebar;

$theme: (
    color: (
      primary: mat.$violet-palette,
      tertiary: mat.$orange-palette,
      // tertiary: my-theme.$tertiary-palette,
      theme-type: color-scheme,
      use-system-variables: false
    ),
    // Should be a typography object
    typography: (
      plain-family: Roboto
    ),
    density: (
      scale: -3
    )
);

// validates the schema
$mat-theme: mat.define-theme($theme);

// Get the map of all system properties from the theme
$system: m3-utils.get-system($mat-theme);

html {
  color-scheme: light;
  @include mat.all-component-themes($mat-theme);
  // @include mat.theme((
  //   color: (
  //     primary: my-theme.$primary-palette,
  //     tertiary: my-theme.$tertiary-palette,
  //     background: white
  //   ),
  //   typography: Roboto,
  //   density: 0
  // ));
  // mat.theme will emit system variables only if the input is a configuration map,
  // if the input is a pre-built mat.theme, it will not emit them
  @include mat.theme($theme);

  --density-scale: #{map.get($system, density-scale)};

  @include pill.theme($mat-theme);
  @include sidebar.theme($mat-theme);

  .mat-button-primary {
    @include mat.button-color($theme: $mat-theme, $color-variant: 'primary');
  }

  .mat-button-secondary {
    @include mat.button-theme($theme: $mat-theme, $color-variant: 'secondary');
  }

  .mat-button-tertiary {
    @include mat.button-theme($theme: $mat-theme, $color-variant: 'tertiary');
  }

  .mat-button-error {
    @include mat.button-theme($theme: $mat-theme, $color-variant: 'error');
  }

  --background-color-contrast: white;

  .sidenav {
    @include mat.sidenav-overrides((
      // container-background-color: var(--mat-sys-secondary-container), 
      // container-text-color: var(--mat-sys-on-secondary-container),
      container-shape: 0px,
      content-background-color: var(--background-color-contrast)
    ));
  }
}

:root {
  

  @include mat.form-field-overrides((
    // outlined-outline-width: 0
  ));
}

// Conflict with Tailwind
.mdc-notched-outline__notch {
  border-right: 0px
}